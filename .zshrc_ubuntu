# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
#ZSH_THEME="robbyrussell"
ZSH_THEME="fino-time"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git sublime z wd)

source $ZSH/oh-my-zsh.sh

# User configuration

export PATH=$HOME/bin:/usr/local/bin:$PATH
# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"


### Personal configuration below ###
alias bd='make KIWI_TARGET=CSR1000V3'
alias bdp='make KIWI_TARGET=CSR1000V3 swpack'
alias b5='make KIWI_TARGET=CSR500'
alias b5p='make KIWI_TARGET=CSR500 swpack'
alias b52='make KIWI_TARGET=CSR500V2'
alias b52p='make KIWI_TARGET=CSR500V2 swpack'
#alias httpsvr='python -m SimpleHTTPServer '
#alias httpsvr='twistd -no web --path=. -p '
function httpsvr() {
    twistd -no web --path=. --port="tcp:$1" $2
}
alias minicom-1='minicom -D /dev/ttyS0 -b 115200 -o -C ~/minicom1.log'
alias minicom-2='minicom -D /dev/ttyUSB0 -b 115200 -o -C ~/minicom2.log'
alias minicom-3='minicom -D /dev/ttyUSB1 -b 115200 -o -C ~/minicom3.log'
alias upcsr='~/workspace/upgrade.py'
alias upgrade++='~/workspace/cnet/scripts/upgrade++'
alias ppscp='~/workspace/pssh-2.3.1/bin/pscp -h ~/servers.txt'
alias gv_eclipse='z eclipse && gvim'
alias tmux='tmux -2'
alias t='telnet'
alias p='ping'
alias ex='extract_helpdesk.sh'
alias youget='python3 ~/workspace/you-get/you-get'
alias csrgdb='mips-csr3.0-gdb -iex "set pr pr" -iex "set pag off" -iex "set sysroot /usr/share/toolchain/csr-3.0-buildroot/toolchain/usr/mips-csr3.0-linux-uclibc/sysroot"'
alias runtest='~/workspace/cnet/scripts/runTest.py'
# Show Branch in git
#source ~/git-completion.bash
# 配置相关变量来显示不同的git仓库的状态，其中的“1”可以为任意的非空值
#export GIT_PS1_SHOWDIRTYSTATE=1
#export GIT_PS1_SHOWSTASHSTATE=1
#export GIT_PS1_SHOWUNTRACKEDFILES=1
#export GIT_PS1_SHOWUPSTREAM="verbose git svn"

#PS1='\[\033[1;31m\]\u@\h \[\033[1;34m\]\W\[\033[1;31m\]$(__git_ps1 " (%s)")\[\033[1;35m\] -> \[\033[0m\]'

# import z.sh for quick directory jumping
#. ~/workspace/z/z.sh

# manually update display env in case it goes wrong
alias save_disp='echo $DISPLAY > ~/.display.txt'
alias up_disp='export DISPLAY=`cat ~/.display.txt`'

# for script runner
alias hg='~/workspace/MyScript/runscript.py'

function testrun {
    echo "\n\n\nRunning testcase $2 for $1 times ......\n\
        Press Ctrl+C if you want to cancel\n\n\n"
    sleep 5
    for i in `seq 1 $1`; do runtest $2 | tee /tmp/ats_result.txt; \
        grep -E "\=+ [0123456789]+ pass" /tmp/ats_result.txt >/dev/null || break;\
        echo "\n\n\n--------------------- Finished $i times ------------------\n\n\n";done;
}

# show current disk usage of all folders in current directory
alias ds='du -hm --max-depth=1 2>/dev/null| sort -nr'


# for OpenGrok
export OPENGROK_TOMCAT_BASE=/opt/apache-tomcat-8.0.39


# for FZF
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
# Use ~~ as the trigger sequence instead of the default **
# export FZF_COMPLETION_TRIGGER='~~'
#
# Options to fzf command
# export FZF_COMPLETION_OPTS='+c -x'

# Use ag instead of the default find command for listing candidates.
# - The first argument to the function is the base path to start traversal
# - Note that ag only lists files not directories
# - See the source code (completion.{bash,zsh}) for the details.
_fzf_compgen_path() {
  ag -g "" "$1"
}

# upgrade FZF
alias upgrade_fzf='cd ~/.fzf && git pull && ./install'

# disable rm and use trash-cli instead
#alias rm='echo "This is not the command you are looking for. Use trash-cli instead."; false'
# use trash instead
alias rm='trash'

alias apt='aptitude'

# extract all helpdesk files
alias exall='ls *.tar | while read i; do j=`basename "$i" .tar`; mkdir "$j" && extract_helpdesk.sh -i "$i" -o "$j" && mergelog.py "$j" > "$j".txt; done'

export PATH=$PATH:~/workspace/myscript/

# add icdiff to path
export PATH=$PATH:~/workspace/icdiff
alias gic='git icdiff'


# restore monitor position for xfce
# DP-2 DP-3 VGA-0
alias restore_monitor='xrandr --output DP-2 --left-of VGA-0 --preferred --output DP-2 --primary; xrandr --output DP-3 --below DP-2 --output DP-3'
#xrandr --output VGA-0 --right-of DP-2 --output DP-2

# force logout
alias logmeout='pkill -u $USER'

# open last log by tmux-logging
alias openlastlog='geany `ls ~/tmux-history-*.log -ct | head -1`'
